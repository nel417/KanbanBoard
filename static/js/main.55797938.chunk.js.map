{"version":3,"sources":["actions/listActions.js","actions/cardActions.js","actions/index.js","reducers/listReducer.js","reducers/index.js","store/index.js","components/BaseCard.js","components/ActionButton.js","components/KbList.js","components/App.js","index.js"],"names":["addList","title","type","CONSTANTS","ADD_LIST","payload","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","DRAG_HAPENED","addCard","listId","text","ADD_CARD","cardId","initialState","listReducer","state","action","newList","cards","id","newCard","newState","map","list","find","card","splice","listStart","listEnd","combineReducers","lists","store","createStore","rootReducer","CardContainer","styled","div","BaseCard","index","String","provided","ref","innerRef","draggableProps","dragHandleProps","Card","CardContent","Typography","gutterBottom","ActionButton","formOpen","renderAdd","props","bText","bOpacity","bTextColor","bBackground","onClick","openForm","style","styles","ButtonGroup","opacity","color","background","Icon","closeForm","e","setState","handleChange","target","value","handleAddList","dispatch","handleAddCard","renderForm","placeholder","buttonTitle","overflow","minHeight","minWidth","padding","autoFocus","onBlur","onChange","resize","width","outline","border","formButtonGroup","Button","onMouseDown","variant","backgroundColor","marginLeft","cursor","this","React","Component","display","alignItems","borderRadius","height","paddingLeft","marginTop","connect","ListContainer","KbList","droppableId","droppableProps","paddingBottom","key","App","onDragEnd","result","destination","source","AppBar","position","Toolbar","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55797938.chunk.js","sourcesContent":["import {\n    CONSTANTS\n} from '../actions'\n\n\nexport const addList = (title) => {\n    return {\n        type: CONSTANTS.ADD_LIST,\n        payload: title\n    }\n}\n\nexport const sort = (\n    droppableIdStart,\n    droppableIdEnd,\n    droppableIndexStart,\n    droppableIndexEnd,\n    draggableId\n) => {\n    return {\n        type: CONSTANTS.DRAG_HAPENED,\n        payload: {\n            droppableIdStart,\n            droppableIdEnd,\n            droppableIndexStart,\n            droppableIndexEnd,\n            draggableId\n        }\n    }\n}","import {\n    CONSTANTS\n} from '../actions'\n\n\nexport const addCard = (listId, text) => {\n    return {\n        type: CONSTANTS.ADD_CARD,\n        payload: {\n            text,\n            listId\n        }\n    }\n}","export * from \"./listActions\"\nexport * from \"./cardActions\"\n\n\n\n\nexport const CONSTANTS = {\n    ADD_CARD: \"ADD_CARD\",\n    ADD_LIST: \"ADD_LIST\",\n    DRAG_HAPENED: \"DRAG_HAPPENED\"\n}","import {\n  CONSTANTS\n} from '../actions'\n\nlet listId = 2\nlet cardId = 5\nconst initialState = [\n  // title: \"Todo\",\n  // id: `list-${0}`,\n  // cards: [{\n  //     id: `card-${0}`,\n  //     text: \"Welcome. Click add a new list to the right to make a new list. oh you can drag and d \"\n  //   },\n\n  // ]\n];\n\n\nconst listReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST:\n      const newList = {\n        title: action.payload,\n        cards: [],\n        id: `list-${listId}`\n      }\n      listId += 1\n      return [...state, newList]\n\n    case CONSTANTS.ADD_CARD: {\n      const newCard = {\n        text: action.payload.text,\n        id: `card-${cardId}`\n      }\n      cardId += 1\n\n      const newState = state.map(list => {\n        if (list.id === action.payload.listId) {\n          return {\n            ...list,\n            cards: [...list.cards, newCard]\n          }\n        } else {\n          return list\n        }\n      })\n      return newState\n    }\n    case CONSTANTS.DRAG_HAPENED:\n      const {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexStart,\n        droppableIndexEnd,\n      } = action.payload;\n\n      const newState = [...state]\n      //same list\n      if (droppableIdStart === droppableIdEnd) {\n        const list = state.find(list => droppableIdStart === list.id)\n        const card = list.cards.splice(droppableIndexStart, 1)\n        list.cards.splice(droppableIndexEnd, 0, ...card)\n      }\n\n\n      if (droppableIdStart !== droppableIdEnd) {\n        const listStart = state.find(list => droppableIdStart === list.id)\n        const card = listStart.cards.splice(droppableIndexStart, 1)\n        const listEnd = state.find(list => droppableIdEnd === list.id)\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card)\n\n      }\n\n\n\n      return newState\n    default:\n      return state;\n  }\n};\n\nexport default listReducer;","import {\n    combineReducers\n} from \"redux\"\nimport listReducer from './listReducer'\n\nexport default combineReducers({\n    lists: listReducer\n});","import {\n    createStore\n} from \"redux\"\n\nimport rootReducer from '../reducers'\n\n\nconst store = createStore(rootReducer)\n\nexport default store","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport styled from \"styled-components\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nconst CardContainer = styled.div`\n  margin-bottom: 9px;\n`;\n\nconst BaseCard = ({ text, id, index }) => {\n  return (\n    <Draggable draggableId={String(id)} index={index}>\n      {provided => (\n        <CardContainer\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <Card>\n            <CardContent>\n              <Typography gutterBottom> {text} </Typography>\n            </CardContent>\n          </Card>\n        </CardContainer>\n      )}\n    </Draggable>\n  );\n};\n\n// const styles = {\n//   cardContainer: {\n//     marginBottom: 8\n//   }\n// };\nexport default BaseCard;\n","import React from \"react\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport { connect } from \"react-redux\";\nimport { addList, addCard } from \"../actions\";\n\nimport TextArea from \"react-textarea-autosize\";\nclass ActionButton extends React.Component {\n  state = {\n    formOpen: false,\n    text: \"\"\n  };\n\n  renderAdd = () => {\n    const { list } = this.props;\n    const bText = list ? \"Add New List\" : \"Add New Card\";\n    const bOpacity = list ? 1 : 0.5;\n    const bTextColor = list ? \"white\" : \"inherit\";\n    const bBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\n    return (\n      <div\n        onClick={this.openForm}\n        style={{\n          ...styles.ButtonGroup,\n          opacity: bOpacity,\n          color: bTextColor,\n          background: bBackground\n        }}\n      >\n        <Icon> add </Icon> <p> {bText} </p>{\" \"}\n      </div>\n    );\n  };\n\n  closeForm = e => {\n    this.setState({\n      formOpen: false\n    });\n  };\n\n  handleChange = e => {\n    this.setState({\n      text: e.target.value\n    });\n  };\n\n  handleAddList = () => {\n    const { dispatch } = this.props;\n    const { text } = this.state;\n\n    if (text) {\n      this.setState({\n        text: \"\"\n      });\n      dispatch(addList(text));\n    }\n    return null;\n  };\n\n  handleAddCard = () => {\n    const { dispatch, listId } = this.props;\n    const { text } = this.state;\n\n    if (text) {\n      this.setState({\n        text: \"\"\n      });\n      dispatch(addCard(listId, text));\n    }\n  };\n\n  renderForm = () => {\n    const { list } = this.props;\n    const placeholder = list ? \"list title\" : \"enter title for this card\";\n\n    const buttonTitle = list ? \"Add List\" : \"Add Card\";\n    return (\n      <div>\n        <Card\n          style={{\n            overflow: \"visible\",\n            minHeight: 80,\n            minWidth: 272,\n            padding: \"6px 8px 2px\"\n          }}\n        >\n          <TextArea\n            placeholder={placeholder}\n            autoFocus\n            onBlur={this.closeForm}\n            value={this.state.text}\n            onChange={this.handleChange}\n            style={{\n              resize: \"none\",\n              width: \"100%\",\n              outline: \"none\",\n              border: \"none\"\n            }}\n          />{\" \"}\n        </Card>{\" \"}\n        <div style={styles.formButtonGroup}>\n          <Button\n            onMouseDown={list ? this.handleAddList : this.handleAddCard}\n            variant=\"contained\"\n            style={{\n              color: \"white\",\n              backgroundColor: \"blue\"\n            }}\n          >\n            {buttonTitle}{\" \"}\n          </Button>{\" \"}\n          <Icon\n            style={{\n              marginLeft: 8,\n              cursor: \"pointer\"\n            }}\n          >\n            {\" \"}\n            close{\" \"}\n          </Icon>{\" \"}\n        </div>{\" \"}\n      </div>\n    );\n  };\n\n  openForm = () => {\n    this.setState({\n      formOpen: true\n    });\n  };\n\n  render() {\n    return this.state.formOpen ? this.renderForm() : this.renderAdd();\n  }\n}\n\nconst styles = {\n  ButtonGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n    borderRadius: 3,\n    height: 35,\n    width: 272,\n    paddingLeft: 10\n  },\n  formButtonGroup: {\n    marginTop: 8,\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n};\nexport default connect()(ActionButton);\n","import React from \"react\";\nimport BaseCard from \"./BaseCard\";\nimport ActionButton from \"./ActionButton\";\nimport styled from \"styled-components\";\nimport { Droppable } from \"react-beautiful-dnd\";\n\nconst ListContainer = styled.div`\n  background-color: #e5eff5;\n  border-radius: 5px;\n  width: 300px;\n  padding: 8px;\n  height: 100%;\n  margin-right: 16px;\n  padding-top: 15px;\n  font-family: helvetica;\n`;\n\nconst KbList = ({ title, cards, listId }) => {\n  return (\n    <Droppable droppableId={String(listId)}>\n      {provided => (\n        <ListContainer {...provided.droppableProps} ref={provided.innerRef}>\n          <h3 style={{ paddingBottom: 16 }}> {title} </h3>\n          {cards.map((card, index) => (\n            <BaseCard\n              key={card.id}\n              index={index}\n              text={card.text}\n              id={card.id}\n            />\n          ))}\n          {provided.placeholder} <ActionButton listId={listId} />\n        </ListContainer>\n      )}\n    </Droppable>\n  );\n};\n\n// const styles = {\n//   container: {\n//     backgroundColor: \"#aaa\",\n//     borderRadius: 3,\n//     width: 300,\n//     padding: 8,\n//     height: \"100%\",\n//     marginRight: 8\n//   }\n// };\nexport default KbList;\n","import React from \"react\";\nimport KbList from \"./KbList\";\nimport { connect } from \"react-redux\";\nimport ActionButton from \"./ActionButton\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport \"../App.css\";\nimport { AppBar, Typography, Toolbar } from \"@material-ui/core/\";\nimport styled from \"styled-components\";\nimport { sort } from \"../actions\";\n\nconst ListContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding-top: 16px;\n  padding-left: 16px;\n  font-family: helvetica;\n`;\n\nclass App extends React.Component {\n  onDragEnd = result => {\n    const { destination, source, draggableId } = result;\n    if (!destination) {\n      return;\n    }\n    this.props.dispatch(\n      sort(\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index,\n        draggableId\n      )\n    );\n  };\n\n  render() {\n    const { lists } = this.props;\n\n    return (\n      <div>\n        <AppBar\n          position=\"static\"\n          style={{ background: \"#2779BF\", opacity: 0.9 }}\n        >\n          <Toolbar>\n            <Typography variant=\"h6\">Kanban Board</Typography>\n          </Toolbar>\n        </AppBar>\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <div className=\"App\">\n            <ListContainer>\n              {lists.map(list => (\n                <KbList\n                  listId={list.id}\n                  key={list.id}\n                  title={list.title}\n                  cards={list.cards}\n                />\n              ))}\n              <ActionButton list />\n            </ListContainer>\n          </div>\n        </DragDropContext>\n      </div>\n    );\n  }\n}\n\n// const styles = {\n//   listsContainer: {\n//     display: \"flex\",\n//     flexDirection: \"row\",\n//     marginRight: 10\n//   }\n// };\nconst mapStateToProps = state => ({\n  lists: state.lists\n});\nexport default connect(mapStateToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}